"use strict";Object.defineProperty(exports, "__esModule", { value: true });exports.getInputIdByName = exports.getFormIdByName = void 0;var _useArkform = await jitiImport("../../composables/useArkform");
var _uuid = await jitiImport("./uuid");












const getInputIdByName = (P) => {
  const { name, id } = P;

  const $arkform = (0, _useArkform.useArkForm)();
  const { formId } = (0, _uuid.getIdsFromId)(id);
  const form = $arkform.useForm(formId);

  const found = form.names.value.find((a) => {
    return a.name === name;
  });

  if (!found) {
    throw new Error(`[arkform]: Input with name (${name}) does exist in form.`);
  }

  return found.id;
};exports.getInputIdByName = getInputIdByName;









const getFormIdByName = (P) => {
  const { name } = P;

  const $forms = useArkFormStore();
  let formId = null;

  const formList = Object.entries($forms.state);
  formList.forEach(([id, form]) => {
    if (form.name === name) {
      formId = id;
    }
  });

  if (!formId) {
    console.warn(`[Arkform]: Invalid form name ${name}.`);
    return "";
  }

  return formId;
};exports.getFormIdByName = getFormIdByName; /* v9-cec991eea2eed7d3 */
