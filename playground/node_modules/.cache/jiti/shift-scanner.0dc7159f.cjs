"use strict";Object.defineProperty(exports, "__esModule", { value: true });exports.ArkTypeScanner = void 0;var _util = require("@ark/util");
class ArkTypeScanner extends _util.Scanner {
  shiftUntilNextTerminator() {
    this.shiftUntilNonWhitespace();
    return this.shiftUntil(() => this.lookahead in ArkTypeScanner.terminatingChars);
  }
  static terminatingChars = {
    "<": 1,
    ">": 1,
    "=": 1,
    "|": 1,
    "&": 1,
    ")": 1,
    "[": 1,
    "%": 1,
    ",": 1,
    ":": 1,
    "?": 1,
    "#": 1,
    ..._util.whitespaceChars
  };
  static finalizingLookaheads = {
    ">": 1,
    ",": 1,
    "": 1,
    "=": 1,
    "?": 1
  };
  static lookaheadIsFinalizing = (lookahead, unscanned) => lookahead === ">" ?
  unscanned[0] === "=" ?
  // >== would only occur in an expression like Array<number>==5
  // otherwise, >= would only occur as part of a bound like number>=5
  unscanned[1] === "="
  // if > is the end of a generic instantiation, the next token will be
  // an operator or the end of the string
  : unscanned.trimStart() === "" ||
  (0, _util.isKeyOf)(unscanned.trimStart()[0], ArkTypeScanner.terminatingChars)
  // "=" is a finalizer on its own (representing a default value),
  // but not with a second "=" (an equality comparator)
  : lookahead === "=" ? unscanned[0] !== "="
  // "," and "?" are unambiguously finalizers
  : lookahead === "," || lookahead === "?";
}exports.ArkTypeScanner = ArkTypeScanner; /* v9-71c9daa28f2c2888 */
