"use strict";Object.defineProperty(exports, "__esModule", { value: true });exports.type = exports.schema = exports.match = exports.keywords = exports.generic = exports.define = exports.declare = exports.ark = void 0;var _scope = require("../scope.js");
var _builtins = require("./builtins.js");
var _constructors = require("./constructors.js");
var _number = require("./number.js");
var _string = require("./string.js");
var _ts = require("./ts.js");
const ark = exports.ark = (0, _scope.scope)({
  ..._ts.arkTsKeywords,
  ..._ts.arkTsGenerics,
  ..._constructors.arkPrototypes,
  ..._builtins.arkBuiltins,
  string: _string.string,
  number: _number.number,
  object: _ts.object,
  unknown: _ts.unknown
}, { prereducedAliases: true, name: "ark" });
const keywords = exports.keywords = ark.export();
Object.assign(_scope.$arkTypeRegistry.ambient, keywords);
_scope.$arkTypeRegistry.typeAttachments = {
  string: keywords.string.root,
  number: keywords.number.root,
  bigint: keywords.bigint,
  boolean: keywords.boolean,
  symbol: keywords.symbol,
  undefined: keywords.undefined,
  null: keywords.null,
  object: keywords.object.root,
  unknown: keywords.unknown.root,
  false: keywords.false,
  true: keywords.true,
  never: keywords.never,
  arrayIndex: keywords.Array.index,
  Key: keywords.Key,
  Record: keywords.Record,
  Array: keywords.Array.root,
  Date: keywords.Date
};
const type = exports.type = Object.assign(ark.type,
// assign attachments newly parsed in keywords
// future scopes add these directly from the
// registry when their TypeParsers are instantiated
_scope.$arkTypeRegistry.typeAttachments);
const match = exports.match = ark.match;
const generic = exports.generic = ark.generic;
const schema = exports.schema = ark.schema;
const define = exports.define = ark.define;
const declare = exports.declare = ark.declare; /* v9-43a2650f78ba47eb */
