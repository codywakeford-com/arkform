"use strict";Object.defineProperty(exports, "__esModule", { value: true });exports.arkConfigDefaults = void 0;exports.defineArkformConfig = defineArkformConfig;exports.typesConfig = void 0;var _lodashEs = await jitiImport("lodash-es");

var _errorDefaults = await jitiImport("../composables/config/errorDefaults");
var _passwordDefaults = await jitiImport("../composables/config/passwordDefaults");
var _useArkform = await jitiImport("../composables/useArkform");
var _default = await jitiImport("../style/animations/default");
var _arktype = await jitiImport("arktype");
var _errorSets = await jitiImport("../composables/config/errorSets");































































































const typesConfig = exports.typesConfig = {
  form: (0, _arktype.type)({
    firstName: "string | null",
    lastName: "string | null",
    email: "string | null",
    password: "string | null"
  })
};

let arkConfigDefaults = exports.arkConfigDefaults = {
  root: "arkform",
  theme: "default",
  animations: {
    default: _default.arkDefaultAnimation
  },

  arkfire: {
    enabled: true,
    firebaseConfig: null,

    ports: {
      auth: 9099,
      firestore: 8080,
      hosting: 5000,
      storage: 9199
    }
  },

  features: {
    arkfire: true,
    tasks: true
  },

  errors: {
    named: _errorSets.errorSets,
    messages: _errorDefaults.errorDefaults
  },
  password: _passwordDefaults.passwordDefaults,
  validation: {
    strategies: {
      shy: (valid) => {}
    }
  }
};

function defineArkformConfig(userConfig) {
  const mergedConfig = (0, _lodashEs.merge)({}, arkConfigDefaults, userConfig || {});

  const arkFormStore = (0, _useArkform.useArkForm)();
  Object.assign(arkFormStore.config.value, mergedConfig);

  return (0, _useArkform.useArkForm)().config;
} /* v9-c853f79482acdd07 */
