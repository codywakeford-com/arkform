"use strict";Object.defineProperty(exports, "__esModule", { value: true });exports.zeroWidthSpace = exports.throwParseError = exports.throwInternalError = exports.throwError = exports.noSuggest = exports.ParseError = exports.InternalArktypeError = void 0;class InternalArktypeError extends Error {}exports.InternalArktypeError = InternalArktypeError;

const throwInternalError = (message) => throwError(message, InternalArktypeError);exports.throwInternalError = throwInternalError;
const throwError = (message, ctor = Error) => {
  throw new ctor(message);
};exports.throwError = throwError;
class ParseError extends Error {
  name = "ParseError";
}exports.ParseError = ParseError;
const throwParseError = (message) => throwError(message, ParseError);
/**
 *  TypeScript won't suggest strings beginning with a space as properties.
 *  Useful for symbol-like string properties.
 */exports.throwParseError = throwParseError;
const noSuggest = (s) => ` ${s}`;
/** "Hair Space" character, used  as a non-rendered sentinel for an error message string:
 *  https://www.compart.com/en/unicode/U+200A
 */exports.noSuggest = noSuggest;
const zeroWidthSpace = exports.zeroWidthSpace = "â€Š"; /* v9-e4bb7252b02ef4a5 */
