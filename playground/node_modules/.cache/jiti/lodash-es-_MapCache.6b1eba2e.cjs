"use strict";Object.defineProperty(exports, "__esModule", { value: true });exports.default = void 0;var _mapCacheClear = _interopRequireDefault(require("./_mapCacheClear.js"));
var _mapCacheDelete = _interopRequireDefault(require("./_mapCacheDelete.js"));
var _mapCacheGet = _interopRequireDefault(require("./_mapCacheGet.js"));
var _mapCacheHas = _interopRequireDefault(require("./_mapCacheHas.js"));
var _mapCacheSet = _interopRequireDefault(require("./_mapCacheSet.js"));function _interopRequireDefault(e) {return e && e.__esModule ? e : { default: e };}

/**
 * Creates a map cache object to store key-value pairs.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */
function MapCache(entries) {
  var index = -1,
    length = entries == null ? 0 : entries.length;

  this.clear();
  while (++index < length) {
    var entry = entries[index];
    this.set(entry[0], entry[1]);
  }
}

// Add methods to `MapCache`.
MapCache.prototype.clear = _mapCacheClear.default;
MapCache.prototype['delete'] = _mapCacheDelete.default;
MapCache.prototype.get = _mapCacheGet.default;
MapCache.prototype.has = _mapCacheHas.default;
MapCache.prototype.set = _mapCacheSet.default;var _default = exports.default =

MapCache; /* v9-9b69c42ee808b654 */
