"use strict";Object.defineProperty(exports, "__esModule", { value: true });exports.nodeImplementationsByKind = exports.nodeClassesByKind = void 0;var _util = require("@ark/util");
var _config = require("./config.js");
var _predicate = require("./predicate.js");
var _divisor = require("./refinements/divisor.js");
var _kinds = require("./refinements/kinds.js");
var _pattern = require("./refinements/pattern.js");
var _alias = require("./roots/alias.js");
var _domain = require("./roots/domain.js");
var _intersection = require("./roots/intersection.js");
var _morph = require("./roots/morph.js");
var _proto = require("./roots/proto.js");
var _union = require("./roots/union.js");
var _unit = require("./roots/unit.js");
var _registry = require("./shared/registry.js");
var _toJsonSchema = require("./shared/toJsonSchema.js");
var _index = require("./structure/index.js");
var _optional = require("./structure/optional.js");
var _required = require("./structure/required.js");
var _sequence = require("./structure/sequence.js");
var _structure = require("./structure/structure.js");
const nodeImplementationsByKind = exports.nodeImplementationsByKind = {
  ..._kinds.boundImplementationsByKind,
  alias: _alias.Alias.implementation,
  domain: _domain.Domain.implementation,
  unit: _unit.Unit.implementation,
  proto: _proto.Proto.implementation,
  union: _union.Union.implementation,
  morph: _morph.Morph.implementation,
  intersection: _intersection.Intersection.implementation,
  divisor: _divisor.Divisor.implementation,
  pattern: _pattern.Pattern.implementation,
  predicate: _predicate.Predicate.implementation,
  required: _required.Required.implementation,
  optional: _optional.Optional.implementation,
  index: _index.Index.implementation,
  sequence: _sequence.Sequence.implementation,
  structure: _structure.Structure.implementation
};
_registry.$ark.defaultConfig = (0, _util.withAlphabetizedKeys)(Object.assign((0, _util.flatMorph)(nodeImplementationsByKind, (kind, implementation) => [
kind,
implementation.defaults]
), {
  jitless: (0, _util.envHasCsp)(),
  clone: _util.deepClone,
  onUndeclaredKey: "ignore",
  exactOptionalPropertyTypes: true,
  numberAllowsNaN: false,
  dateAllowsInvalid: false,
  onFail: null,
  keywords: {},
  toJsonSchema: _toJsonSchema.ToJsonSchema.defaultConfig
}));
_registry.$ark.resolvedConfig = (0, _config.mergeConfigs)(_registry.$ark.defaultConfig, _registry.$ark.config);
const nodeClassesByKind = exports.nodeClassesByKind = {
  ..._kinds.boundClassesByKind,
  alias: _alias.Alias.Node,
  domain: _domain.Domain.Node,
  unit: _unit.Unit.Node,
  proto: _proto.Proto.Node,
  union: _union.Union.Node,
  morph: _morph.Morph.Node,
  intersection: _intersection.Intersection.Node,
  divisor: _divisor.Divisor.Node,
  pattern: _pattern.Pattern.Node,
  predicate: _predicate.Predicate.Node,
  required: _required.Required.Node,
  optional: _optional.Optional.Node,
  index: _index.Index.Node,
  sequence: _sequence.Sequence.Node,
  structure: _structure.Structure.Node
}; /* v9-254b82df869e608e */
