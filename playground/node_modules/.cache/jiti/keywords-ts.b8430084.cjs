"use strict";Object.defineProperty(exports, "__esModule", { value: true });exports.unknown = exports.object = exports.json = exports.arkTsKeywords = exports.arkTsGenerics = void 0;var _schema = require("@ark/schema");
var _util = require("@ark/util");
var _scope = require("../scope.js");
const arkTsKeywords = exports.arkTsKeywords = _scope.Scope.module({
  bigint: _schema.intrinsic.bigint,
  boolean: _schema.intrinsic.boolean,
  false: _schema.intrinsic.false,
  never: _schema.intrinsic.never,
  null: _schema.intrinsic.null,
  number: _schema.intrinsic.number,
  object: _schema.intrinsic.object,
  string: _schema.intrinsic.string,
  symbol: _schema.intrinsic.symbol,
  true: _schema.intrinsic.true,
  unknown: _schema.intrinsic.unknown,
  undefined: _schema.intrinsic.undefined
});
const unknown = exports.unknown = _scope.Scope.module({
  root: _schema.intrinsic.unknown,
  any: _schema.intrinsic.unknown
}, {
  name: "unknown"
});
const json = exports.json = _scope.Scope.module({
  root: _schema.intrinsic.jsonObject,
  stringify: (0, _schema.node)("morph", {
    in: _schema.intrinsic.jsonObject,
    morphs: (data) => JSON.stringify(data),
    declaredOut: _schema.intrinsic.string
  })
}, {
  name: "object.json"
});
const object = exports.object = _scope.Scope.module({
  root: _schema.intrinsic.object,
  json
}, {
  name: "object"
});
class RecordHkt extends _util.Hkt {
  description = 'instantiate an object from an index signature and corresponding value type like `Record("string", "number")`';
}
const Record = (0, _schema.genericNode)(["K", _schema.intrinsic.key], "V")((args) => ({
  domain: "object",
  index: {
    signature: args.K,
    value: args.V
  }
}), RecordHkt);
class PickHkt extends _util.Hkt {
  description = 'pick a set of properties from an object like `Pick(User, "name | age")`';
}
const Pick = (0, _schema.genericNode)(["T", _schema.intrinsic.object], ["K", _schema.intrinsic.key])((args) => args.T.pick(args.K), PickHkt);
class OmitHkt extends _util.Hkt {
  description = 'omit a set of properties from an object like `Omit(User, "age")`';
}
const Omit = (0, _schema.genericNode)(["T", _schema.intrinsic.object], ["K", _schema.intrinsic.key])((args) => args.T.omit(args.K), OmitHkt);
class PartialHkt extends _util.Hkt {
  description = "make all named properties of an object optional like `Partial(User)`";
}
const Partial = (0, _schema.genericNode)(["T", _schema.intrinsic.object])((args) => args.T.partial(), PartialHkt);
class RequiredHkt extends _util.Hkt {
  description = "make all named properties of an object required like `Required(User)`";
}
const Required = (0, _schema.genericNode)(["T", _schema.intrinsic.object])((args) => args.T.required(), RequiredHkt);
class ExcludeHkt extends _util.Hkt {
  description = 'exclude branches of a union like `Exclude("boolean", "true")`';
}
const Exclude = (0, _schema.genericNode)("T", "U")((args) => args.T.exclude(args.U), ExcludeHkt);
class ExtractHkt extends _util.Hkt {
  description = 'extract branches of a union like `Extract("0 | false | 1", "number")`';
}
const Extract = (0, _schema.genericNode)("T", "U")((args) => args.T.extract(args.U), ExtractHkt);
const arkTsGenerics = exports.arkTsGenerics = _scope.Scope.module({
  Exclude,
  Extract,
  Omit,
  Partial,
  Pick,
  Record,
  Required
}); /* v9-f91b11dae01c2b74 */
